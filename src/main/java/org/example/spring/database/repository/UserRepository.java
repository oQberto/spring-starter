package org.example.spring.database.repository;

import lombok.RequiredArgsConstructor;
import org.example.spring.database.pool.ConnectionPool;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Repository;

/**
 * {@code @Repository} - это аннотация в Spring Framework, которая используется для пометки класса как репозитория (хранилища)
 * данных. Репозитории являются частью архитектуры доступа к данным (Data Access Layer) и предоставляют способ
 * взаимодействия с базой данных или другими источниками данных. Классы, помеченные @Repository, обычно используются
 * для выполнения операций чтения и записи данных в базе данных.
 * <p>
 * Основные характеристики и использование аннотации @Repository:
 * <p>
 * Обнаружение бинов: Классы, помеченные аннотацией @Repository, автоматически обнаруживаются Spring и регистрируются
 * как Spring бины в контексте приложения. Это позволяет использовать их для взаимодействия с данными, выполняя
 * операции базы данных.
 * <p>
 * Исключение обработки: Классы, помеченные @Repository, обычно используются для доступа к данным и могут автоматически
 * обрабатывать исключения, связанные с доступом к данным, и преобразовывать их в Spring исключения
 * (например, DataAccessException), что упрощает обработку ошибок доступа к данным.
 * <p>
 * Интеграция с Spring Data: @Repository часто используется в сочетании с Spring Data, что позволяет создавать
 * репозитории с помощью интерфейсов и автоматически создавать реализацию этих репозиториев Spring Data.
 */
@Repository
@RequiredArgsConstructor
public class UserRepository {

    /**
     * Аннотация @Qualifier является частью Spring Framework и используется для разрешения неоднозначности в инъекции
     * зависимостей, когда в контейнере Spring существует несколько бинов одного типа и Spring не может самостоятельно
     * определить, какой бин следует использовать. @Qualifier позволяет явно указать, какой бин должен быть инъектирован.
     * <p>
     * Основные характеристики и использование аннотации @Qualifier:
     * <p>
     * Разрешение конфликта зависимостей: Когда несколько бинов одного типа доступны для инъекции, @Qualifier позволяет
     * выбрать конкретный бин, который должен быть инъектирован в поле, метод или конструктор.
     * <p>
     * Сочетание с другими аннотациями: @Qualifier обычно сочетается с аннотацией @Autowired или другими аннотациями
     * внедрения зависимостей для уточнения, какой именно бин должен быть инъектирован.
     * <p>
     * Имя бина: @Qualifier принимает в качестве аргумента имя бина, который вы хотите инъектировать. Это имя должно
     * соответствовать значению value атрибута @Component или другой аннотации, определяющей бин.
     */
    @Qualifier("connectionPool2")
    private final ConnectionPool connectionPool;
}
